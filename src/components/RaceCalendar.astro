---
import trackAssets from '../data/track-assets.json';
import type { LeagueSeasonSession } from '../schemas/league-season-sessions';

interface Props {
  sessions: LeagueSeasonSession[];
}

const { sessions } = Astro.props;

function getTrackInactiveUrl(trackId: number) {
  const track = trackAssets[trackId];
  if (!track?.track_map) return null;
  return `${track.track_map}inactive.svg`;
}

// Sort sessions by date
const sortedSessions = [...sessions].sort((a, b) =>
  new Date(a.launch_at).getTime() - new Date(b.launch_at).getTime()
);

// Split into past and upcoming races
const now = new Date();
const pastSessions = sortedSessions
  .filter(s => new Date(s.launch_at) < now)
  .sort((a, b) => new Date(b.launch_at).getTime() - new Date(a.launch_at).getTime());

const upcomingSessions = sortedSessions.filter(s => new Date(s.launch_at) >= now);

function formatDate(date: Date) {
  return date.toLocaleDateString('en-GB', {
    day: 'numeric',
    month: 'short',
    year: 'numeric'
  });
}

function formatTime(date: Date) {
  return date.toLocaleTimeString('en-GB', {
    hour: '2-digit',
    minute: '2-digit'
  });
}

function getTrackMapUrl(trackId: number) {
  return `https://members-ng.iracing.com/track/map/${trackId}`;
}
---

<div class="space-y-12">
  <section>
    <h2 class="text-2xl font-bold mb-4">Upcoming Races</h2>
    <div class="space-y-4">
      {upcomingSessions.map(session => (
        <div class="bg-gray-800 p-4 rounded-lg">
          <div class="flex justify-between">
            <div class="flex items-center gap-4">
              <div class="w-64">
                <h3 class="text-xl font-semibold">{session.track.track_name}</h3>
                {session.track.config_name && (
                  <p class="text-gray-400">{session.track.config_name}</p>
                )}
              </div>
              <img
                src={getTrackInactiveUrl(session.track.track_id)}
                alt={`${session.track.track_name} track map`}
                class="w-32 h-32 object-contain"
              />
            </div>
            <div class="text-right">
              <p class="text-lg">{formatDate(new Date(session.launch_at))}</p>
              <p class="text-gray-400">{formatTime(new Date(session.launch_at))}</p>
            </div>
          </div>
        </div>
      ))}
    </div>
  </section>

  <section class="opacity-75">
    <h2 class="text-2xl font-bold mb-4 text-gray-400">Past Races</h2>
    <div class="space-y-4">
      {pastSessions.map(session => (
        <div class="bg-gray-800/50 p-4 rounded-lg border border-gray-700 hover:border-gray-600 transition-colors">
          <div class="flex justify-between">
            <div class="flex items-center gap-4">
              <div class="w-64">
                <h3 class="text-xl font-semibold">{session.track.track_name}</h3>
                {session.track.config_name && (
                  <p class="text-gray-400">{session.track.config_name}</p>
                )}
              </div>
              <img
                src={getTrackInactiveUrl(session.track.track_id)}
                alt={`${session.track.track_name} track map`}
                class="w-32 h-32 object-contain"
              />
            </div>
            <div class="text-right">
              <p class="text-lg">{formatDate(new Date(session.launch_at))}</p>
              {session.winner_name && (
                <p class="text-green-400">Winner: {session.winner_name}</p>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </section>
</div>